package components
import "github.com/axyut/dairygo/internal/types"
import "strconv"

templ Audiences(auds []types.Audience, goods []types.Good) {
  <div class="todays"  hx-ext="response-targets">
    <div class="todaysTable">
      <div class="todaysHeader">
        <h1>People you Know</h1>
        <div>
        <button class="open-button" onclick={OpenPopUp("insertAud")}>‚ûï Create </button>
        <button class="open-button" 
          hx-get="/audience/refresh"
        	hx-target="#aud_success"
          hx-indicator=".progress"
		      hx-target-error="#error"
        >üîÉ Refresh </button>
        </div>
      </div>
    @insertAud()
    @AudTable(auds, false, goods)
    </div>
  </div>
  
}

templ AudTable(auds []types.Audience, notify bool, goods []types.Good) {
      <table class="simpleTable"  id="aud_success">
      <tr>
      <th>Transaction</th>
        <th>Name</th>
        <th>Contact</th>
        <th>To Pay</th>
        <th>To Receive</th>
        <th>Actions</th>
      </tr>
      for _, aud := range auds {
        @audArray(aud, goods)
      }
    </table>
    if notify {
      @SuccessToast("Fetching Audiences. Refreshed!")
    }
}

templ insertAud() {
  <div class="todaysInsert" hx-ext="response-targets" id="insertAud">
  <div class="content">
        <div style="display:flex;justify-content:space-between;align-items:flex-start;">
                <div></div>
                <button class="emojiBtn" onclick={ClosePopUp("insertAud")}>‚ùå</button>
        </div>

    <form
        hx-post="/audience"
	      hx-target="#aud_success"
		    hx-target-error="#error"
        hx-swap="beforeend"
        class="formContainer"
    >
      <input class="simpleInput" type="text" name="name" placeholder="Name" />
      <input class="simpleInput" type="text" name="contact" placeholder="Contact" />
      <button class="simpleButton" type="submit">Create</button>
    </form>
    </div>
  </div>
}

templ AudienceInsertError(msg string) {
	// <p>Login Error! {msg}</p>
    @DangerToast("Audience Creation Error! " + msg)
}

templ AudienceInsertSuccess(aud types.Audience, goods []types.Good) {
    @audArray(aud, goods)
    @SuccessToast(aud.Name+" Modification Successful!" )
}


templ audArray(aud types.Audience, goods []types.Good) {
<tr id={"aud_"+aud.ID.Hex()}>
    <td>
        <button class="open-button" onclick={OpenPopUp("aud_buy_"+aud.ID.Hex())}>BUY</button>
        @Buy(goods, aud)
        <button class="open-button" onclick={OpenPopUp("aud_sell_"+aud.ID.Hex())}>SELL</button>
        @Sell(goods, aud)
    </td>
    <td>
      <input class="tableInput" type="text" name="aud_name" value={aud.Name} />
    </td>
    <td>
      <input class="tableInput" type="text" name="aud_contact" value={aud.Contact} />
    </td>
    <td>{strconv.FormatFloat(aud.ToPay, 'f', -1, 64)}</td>
    <td>{strconv.FormatFloat(aud.ToReceive, 'f', -1, 64)}</td>
    <td>
        <button
            hx-patch={"/audience?id="+aud.ID.Hex()}
            hx-include="[name='aud_name'], [name='aud_contact']"
            hx-target={"#aud_"+aud.ID.Hex()}
            hx-target-error="#error"
            hx-swap="outerHTML"
            class="simpleButton"
        >Save</button>
        <button
            hx-confirm={aud.Name+" will be deleted."}
            hx-delete={"/audience?id="+aud.ID.Hex()}
            hx-target={"#aud_"+aud.ID.Hex()}
            hx-target-error="#error"
            hx-swap="outerHTML"
            class="simpleButton red"
        >Del</button>
        <button class="open-button" onclick={OpenPopUp("myForm_"+aud.ID.Hex())}>Set Rate</button>

      <div class="todaysInsert" id={"myForm_"+aud.ID.Hex()}  hx-ext="response-targets">
        <div class="content">
        <form class="formContainer"
          hx-post={"/production?change_aud_id="+aud.ID.Hex()}
          hx-target="#aud_success"
          hx-target-error="#error"
          hx-swap="innerHTML"
        >
        <button type="button" class="emojiBtn" onclick={ClosePopUp("myForm_"+aud.ID.Hex())}>‚ùå</button>

          <input class="simpleInput" type="text" placeholder={aud.Name+" quantity"} name="change_quantity" required />
          <label for="aud">Convert to:</label>
          // <select id="aud" name="prod_aud_id" required>
          //     for _, g := range auds {
          //         <option value={g.ID.Hex()}>{g.Name}</option>
          //     }
          // </select>
          <input class="simpleInput" type="text" placeholder="Produce quantity" name="prod_quantity" required />
          <button type="submit" class="simpleButton">Produce</button>
          
        </form>
        </div>
      </div>
    </td>

</tr>
}