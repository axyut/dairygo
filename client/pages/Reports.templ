package pages

import "github.com/axyut/dairygo/internal/types"
import u "github.com/axyut/dairygo/internal/utils"

templ ReportsPage(goods []types.Good) {
	@reportsStyles()
	<div hx-ext="response-targets">

        <form >
        <div class="trans_nav">
				<button class="open-button" 
					onclick="window.print()"
				>Download</button>
				<div>
						<label>From</label>
						<input class="simpleInput" id="date" type="date" name="from_date" />
						<label>To</label>
						<input class="simpleInput" id="date" type="date" name="to_date" />
				</div>
                <select name="type">
                    <option value="transaction">Transaction</option>
                    <option value="production">Production</option>
                </select>
	
                <select id="good" name="goodID" required>
                    for _, good := range goods {
                        <option value={good.ID.Hex()}>
								From {good.Name}
						</option>
                    }
					<option value="all">All Goods</option>
                </select>
                
				<button class="open-button" 
					type="submit"
					hx-post="/reports/refresh"
					hx-swap="innerHTML"
					hx-target="#reports_here"
					hx-target-error="#error"
					hx-indicator=".progress"
				>Generate</button>
					
        </div>
        </form>

    </div>

	<div id="reports_here" class="divContainer">
	<h1> Generate Reports</h1>
	</div>

}

templ ProdReportAll(prods []types.ProductionReport,goods []types.Good){
	<div>
		<table class="simpleTable">
			<tr>
				<th>Date</th>
			</tr>
			for _, v := range prods {
				<tr>
					<td>{v.DayTime.Time().Format("Jan 2")}</td>
					
						for _, v1 := range v.Goods{
							<td>{u.Str(v1.Changed.Quantity)+" "+v1.Changed.Unit+"s of "+v1.Changed.Name+ "  ➡️  "+u.Str(v1.Produced.Quantity)+" "+v1.Produced.Unit+"s of "+v1.Produced.Name}</td>
						}
				</tr>

			}
						
		</table>
	</div>
}

templ ProdReportPerGood(prods []types.ProductionReportPerChangedGood,goods []types.Good){
	<div>
		<table class="simpleTable">
			<tr>
				<th>Date</th>
				<th>From {prods[0].ChangedGoodName} Total</th>
			</tr>
			for _, v := range prods {
				<tr>
					<td>{v.DayTime.Time().Format("Jan 2")}</td>
						if v.TotalChangedQuantity != 0 && v.TotalProducedQuantity != 0{
							<td>
								{
									u.Str(v.TotalChangedQuantity)+" "+
									v.ChangedGoodUnit+"s  ➡️  "+
									u.Str(v.TotalProducedQuantity)
								}
							</td>
						} else {
							<td></td>
						}
						for _, v1 := range v.ProducedGoods{
							if v1.Changed.Quantity != 0 && v1.Produced.Quantity != 0{
								<td>{u.Str(v1.Changed.Quantity)+" "+v1.Changed.Unit+"s of "+v1.Changed.Name+ "  ➡️  "+u.Str(v1.Produced.Quantity)+" "+v1.Produced.Unit+"s of "+v1.Produced.Name}</td>
							} else {
								<td></td>
							}
						}
				</tr>

			}
		</table>
	</div>
}

templ TransReport(trans []types.TransactionReport){
	<div>
		<table class="simpleTable">
			<tr>
				<th>Date</th>
				<th>{trans[0].GoodName} Transaction</th>
				<th>Bought</th>
				<th>Sold</th>
				<th>Paid</th>
				<th>Unpaid</th>
				<th>To Pay</th>
				<th>To Receive</th>
				<th>Profit</th>
				<th>Loss</th>
			</tr>
			for _, v := range trans {
				<tr>
					<td>{v.DayTime.Time().Format("Jan 2")}</td>
					if v.TotalTransactionQuantity != 0 && v.TotalTransactionPrice != 0{
						<td>{u.Str(v.TotalTransactionQuantity)+" "+v.GoodUnit+"s Rs. "+ u.Str(v.TotalTransactionPrice) }</td>
					} else {
						<td></td>
					}
					
					if v.TotalBoughtQuantity != 0 && v.TotalBoughtPrice != 0{
						<td>{u.Str(v.TotalBoughtQuantity)+" "+v.GoodUnit+"s Rs. "+ u.Str(v.TotalBoughtPrice) }</td>
					} else {
						<td></td>
					}

					if v.TotalSoldQuantity != 0 && v.TotalSoldPrice != 0{
						<td>{u.Str(v.TotalSoldQuantity)+" "+v.GoodUnit+"s Rs. "+ u.Str(v.TotalSoldPrice) }</td>
					} else {
						<td></td>
					}

					if v.TotalPaidQuantity != 0 && v.TotalPaidPrice != 0{
						<td>{u.Str(v.TotalPaidQuantity)+" "+v.GoodUnit+"s Rs. "+ u.Str(v.TotalPaidPrice) }</td>
					} else {
						<td></td>
					}

					if v.TotalUnpaidQuantity != 0 && v.TotalUnpaidPrice != 0{
						<td>{u.Str(v.TotalUnpaidQuantity)+" "+v.GoodUnit+"s Rs. "+ u.Str(v.TotalUnpaidPrice) }</td>
					} else {
						<td></td>
					}

					if v.TotalToPay != 0{
						<td>{"Rs. "+ u.Str(v.TotalToPay) }</td>
					} else {
						<td></td>
					}

					if v.TotalToReceive != 0{
						<td>{"Rs. "+ u.Str(v.TotalToReceive) }</td>
					} else {
						<td></td>
					}

					if v.TotalProfit != 0{
						<td>{"Rs. "+ u.Str(v.TotalProfit) }</td>
					} else {
						<td></td>
					}

					if v.TotalLoss != 0{
						<td>{"Rs. "+ u.Str(v.TotalLoss) }</td>
					} else {
						<td></td>
					}
				</tr>
			}
		</table>
	</div>
}

templ reportsStyles(){
	<style>
		#reports_here {
			padding: 10px;
		}
	</style>
}